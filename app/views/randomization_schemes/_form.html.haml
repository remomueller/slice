= form_with model: [@project, @randomization_scheme], local: true do |form|
  .form-group.row
    - if @randomization_scheme.published?
      .col-md-2
      .col-md-10
        %div.alert.alert-info
          %p
            %strong Algorithm
          %p
            Subjects will be randomized using the
            %code
              = @randomization_scheme.algorithm_name
    - else
      = form.label :algorithm, nil, class: "col-md-2 col-form-label"
      .col-md-10
        = form.select :algorithm, RandomizationScheme::ALGORITHMS, {}, class: "form-control"

  - if @randomization_scheme.randomized_subjects?
    .form-group.row
      .col-md-2
      .col-md-10
        %div.alert.alert-info
          %p
            %strong Published
          %p
            Subject randomization has started. If you need to make changes to
            treatment arms, block size multipliers, or stratification factors,
            you will need to undo all existing randomizations, and then
            unpublish the randomization scheme.

  = render "forms/horizontal/text_field", form: form, object: @randomization_scheme, key: :name
  = render "forms/horizontal/number_field", form: form, object: @randomization_scheme, key: :randomization_goal

  .form-group.row
    %label.col-md-2.col-form-label
      Expected Randomizations By Month
      = link_to "#", class: "btn btn-sm btn-info", data: { object: "toggle-visibility", target: "#estimates-info" }, tabindex: "-1" do
        = icon("fas", "info-circle")
    .col-md-10
      - @project.sites.each do |site|
        = site.name
        - expected_randomization = @randomization_scheme.expected_randomizations.find_by(site_id: site.id)
        - if expected_randomization
          - value = expected_randomization.expected
        - else
          - if params[:randomization_scheme] && params[:randomization_scheme][:expected_randomizations_hashes]
            - hash = params[:randomization_scheme][:expected_randomizations_hashes].find { |h| h[:site_id].to_s == site.id.to_s }
            - value = (hash ? hash[:expected] : "")
          - else
            - value = ""
        = hidden_field_tag "randomization_scheme[expected_randomizations_hashes][][site_id]", site.id
        = text_field_tag "randomization_scheme[expected_randomizations_hashes][][expected]", value, autocomplete: "off", class: "form-control"
      #estimates-info.alert.alert-info{ style: "display: none;margin-top: 20px; " }
        %p
          %strong Expected Recruitment Examples:
        %p
          %code 1,1,2
          1 randomization first month, 1 randomization second month, and 2 randomizations third month and beyond.
        %p
          %code 1,2,0
          1 randomization first month, 2 randomizations second month, and 0 randomizations third month and beyond.
        %p
          %code 0,1,2
          0 randomizations first month, 1 randomization second month, and 2 randomizations third month and beyond.

  - if @randomization_scheme.randomized_subjects?
    .form-group.row
      .col-md-2
      .col-md-10
        .form-control-plaintext
          .alert.alert-info
            %p
              %strong Variable Criteria
            - if @randomization_scheme.variable
              %p
                = link_to @randomization_scheme.variable.name, [@project, @randomization_scheme.variable]
              %p
                = @randomization_scheme.variable_value
            - else
              No Mandatory Randomization Criteria
  - else
    .form-group.row
      %label.col-md-2.col-form-label
        Eligibility
        = link_to "#", class: "btn btn-sm btn-info", data: { object: "toggle-visibility", target: "#eligibility-info" }, tabindex: "-1" do
          = icon("fas", "info-circle")
      .col-md-10
        .row
          .col-sm-6
            = form.select :variable_id, [["---", nil]] + @project.variables.where(variable_type: ["dropdown", "string", "radio", "integer", "numeric"]).order(:name).collect{|v| [v.name, v.id]}, {}, class: "form-control"
          .col-sm-6
            = form.text_field :variable_value, class: "form-control"
        #eligibility-info.alert.alert-info{ style: "display: none;margin-top: 20px; " }
          %p
            %strong Eligibility Criteria
            To limit randomizable subjects by an eligibility criteria, select
            the eligibility criteria variable above, and enter the value entered
            for subjects eligibile for randomization.


  .form-group.row{ style: "#{"display:none" unless @randomization_scheme.minimization?}", data: { object: "show-for-minimization" } }
    - if @randomization_scheme.published?
      .col-md-2
      .col-md-10
        .form-control-plaintext
          .alert.alert-info
            %p
              %strong Chance of Random Treatment Arm Selection
            %p
              = @randomization_scheme.chance_of_random_treatment_arm_selection
              Can be between 0 (Never Random) and 100 (Always Random)
    - else
      = form.label :chance_of_random_treatment_arm_selection, nil, class: "col-md-2 col-form-label"
      .col-md-10
        .input-group
          = form.text_field :chance_of_random_treatment_arm_selection, class: "form-control", placeholder: 30
          .input-group-append
            = link_to "#", class: "btn btn-info", data: { object: "toggle-visibility", target: "#random-chance-info" }, tabindex: "-1" do
              = icon("fas", "info-circle")
        = render "layouts/errors", object: @randomization_scheme, key: :chance_of_random_treatment_arm_selection
        #random-chance-info.alert.alert-info{ style: "display: none;margin-top: 20px;" }
          Can be between 0 (Never Random) and 100 (Always Random)

  = render "forms/horizontal/check_box", form: form, object: @randomization_scheme, key: :allow_tasks_on_weekends, help_text: "Selecting this will allow tasks to be automatically scheduled on Saturdays and Sundays. Leaving this unselected will move automatically scheduled tasks to the closest weekday."

  .form-group.row
    %label.col-md-2.col-form-label Tasks
    .col-md-10
      = link_to "Add Item", add_task_project_randomization_schemes_path, method: :post, remote: true, class: "btn btn-sm btn-light", style: "margin-top: 6px"
      #tasks{ data: { object: "sortable" } }
        = hidden_field_tag "randomization_scheme[task_hashes][]", nil
        - @randomization_scheme.randomization_scheme_tasks.each do |randomization_scheme_task|
          = render "randomization_schemes/task_form", randomization_scheme_task: randomization_scheme_task

  .form-group.row
    .col-md-2
    .col-md-10
      = form.submit nil, class: "btn btn-primary"
      = link_to "Cancel", @randomization_scheme.new_record? ? project_randomization_schemes_path(@project) : [@project, @randomization_scheme], class: "btn btn-light"
